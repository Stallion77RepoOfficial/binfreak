#!/usr/bin/env python3
"""
FuzzPro GUI - PyQt6 Interface for FuzzPro Fuzzing Tool
Professional Security Testing Interface
"""

import sys
import os
import subprocess
import threading
import time
import json
import tempfile
import base64
import shutil
import warnings

# Suppress PyQt6 deprecation warnings
warnings.filterwarnings("ignore", category=DeprecationWarning, module="PyQt6")
from PyQt6.QtWidgets import (QApplication, QMainWindow, QVBoxLayout, QHBoxLayout, 
                            QWidget, QPushButton, QLabel, QLineEdit, QTextEdit, 
                            QProgressBar, QSpinBox, QFileDialog, QGroupBox, 
                            QGridLayout, QTabWidget, QTableWidget, QTableWidgetItem,
                            QSplitter, QFrame, QCheckBox, QComboBox)
from PyQt6.QtCore import QThread, pyqtSignal, QTimer, Qt
from PyQt6.QtGui import QFont, QPixmap, QPalette, QColor, QIcon

# Embedded FuzzPro binary data (will be filled by build script)
EMBEDDED_FUZZPRO_BINARY = base64.b64decode('')

class FuzzingWorker(QThread):
    """Background thread for running fuzzing operations"""
    progress_updated = pyqtSignal(int, int, int)  # current, total, crashes
    output_updated = pyqtSignal(str)
    crash_updated = pyqtSignal(dict)  # real-time crash updates
    finished = pyqtSignal(dict)  # results dictionary
    
    def __init__(self, target_binary, iterations, timeout=30, intensity="High"):
        super().__init__()
        self.target_binary = target_binary
        self.iterations = iterations
        self.timeout = timeout
        self.intensity = intensity
        self.is_running = True
        
    def extract_fuzzpro_binary(self):
        """Extract embedded FuzzPro binary to temp location"""
        if EMBEDDED_FUZZPRO_BINARY is None:
            # Fallback to local binary
            return "./fuzzpro"
            
        temp_dir = tempfile.mkdtemp()
        fuzzpro_path = os.path.join(temp_dir, "fuzzpro")
        
        with open(fuzzpro_path, 'wb') as f:
            f.write(EMBEDDED_FUZZPRO_BINARY)
        
        os.chmod(fuzzpro_path, 0o755)  # Make executable
        return fuzzpro_path
        
    def run(self):
        """Execute fuzzing campaign"""
        try:
            fuzzpro_path = self.extract_fuzzpro_binary()
            cmd = [fuzzpro_path, "-i", str(self.iterations), self.target_binary]
            
            process = subprocess.Popen(
                cmd,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=False,
                bufsize=0,  # Unbuffered for real-time output
                universal_newlines=False
            )
            
            output_lines = []
            current_iter = 0
            total_crashes = 0
            crash_details = []
            
            while True:
                # Read single byte to handle \r properly
                output_byte = process.stdout.read(1)
                if output_byte == b'' and process.poll() is not None:
                    break
                    
                if output_byte:
                    # Accumulate output until we get a complete line
                    if not hasattr(self, '_output_buffer'):
                        self._output_buffer = b''
                    
                    self._output_buffer += output_byte
                    
                    # Check for line endings or carriage return
                    if output_byte in [b'\n', b'\r']:
                        if self._output_buffer:
                            # Decode with error handling
                            try:
                                output = self._output_buffer.decode('utf-8', errors='replace').strip()
                            except:
                                output = str(self._output_buffer, errors='replace').strip()
                            
                            # Reset buffer
                            self._output_buffer = b''
                            
                            if output:  # Only process non-empty lines
                                output_lines.append(output)
                                self.output_updated.emit(output)
                                
                                # Parse progress from real-time output - IMPROVED PARSING
                                if "] " in output and "/" in output and "%" in output and "Crashes:" in output:
                                    try:
                                        # Handle format: "] 50/1000 (5%) | Crashes: 2"
                                        progress_part = output.split("] ")[1]  # Get part after "] "
                                        
                                        # Extract current/total
                                        if "/" in progress_part:
                                            current_total = progress_part.split("(")[0].strip()  # Get "50/1000 "
                                            current_str, total_str = current_total.split("/")
                                            current_iter = int(current_str.strip())
                                            
                                            # Extract crashes count - FIXED PARSING
                                            if "Crashes:" in output:
                                                crash_part = output.split("Crashes:")[1].strip()
                                                # Only take the number part before any non-digit characters
                                                crash_number = ""
                                                for char in crash_part:
                                                    if char.isdigit():
                                                        crash_number += char
                                                    else:
                                                        break
                                                if crash_number:
                                                    total_crashes = int(crash_number)
                                            
                                            # Emit real-time progress update
                                            self.progress_updated.emit(current_iter, self.iterations, total_crashes)
                                            # print(f"Progress update: {current_iter}/{self.iterations}, crashes: {total_crashes}")  # Debug
                                            
                                    except (ValueError, IndexError) as e:
                                        # Silently handle parsing errors
                                        pass
                                            
                                
                                # Parse crash details from CRASH SUMMARY section
                                if "] Address:" in output:
                                    # New crash entry: [1] Address: 0x100000558
                                    try:
                                        address_part = output.split("Address:")[1].strip()
                                        crash_info = {
                                            "address": address_part,
                                            "signal": "Unknown",
                                            "count": "1",
                                            "type": "Unknown",
                                            "severity": "Unknown",
                                            "assembly": []
                                        }
                                        crash_details.append(crash_info)
                                        # Emit real-time crash update
                                        self.crash_updated.emit(crash_info)
                                    except (IndexError, ValueError):
                                        pass
                                elif "Signal:" in output and crash_details and not "] Address:" in output:
                                    # Signal: 6 (not part of a new address entry)
                                    try:
                                        signal_part = output.split("Signal:")[1].strip()
                                        crash_details[-1]["signal"] = signal_part
                                        
                                        # Map signal number to name and severity
                                        try:
                                            signal_num = int(signal_part)
                                            if signal_num == 5:
                                                crash_details[-1]["type"] = "SIGTRAP"
                                                crash_details[-1]["severity"] = "MEDIUM"
                                            elif signal_num == 6:
                                                crash_details[-1]["type"] = "SIGABRT"
                                                crash_details[-1]["severity"] = "HIGH"
                                            elif signal_num == 11:
                                                crash_details[-1]["type"] = "SIGSEGV"
                                                crash_details[-1]["severity"] = "CRITICAL"
                                            elif signal_num == 4:
                                                crash_details[-1]["type"] = "SIGILL"
                                                crash_details[-1]["severity"] = "CRITICAL"
                                            else:
                                                crash_details[-1]["type"] = f"Signal {signal_num}"
                                                crash_details[-1]["severity"] = "UNKNOWN"
                                            
                                            # Emit updated crash info
                                            self.crash_updated.emit(crash_details[-1])
                                        except ValueError:
                                            pass
                                    except (IndexError, ValueError):
                                        pass
                                elif "Count:" in output and "occurrences" in output and crash_details:
                                    # Count: 1 occurrences
                                    try:
                                        count_part = output.split("Count:")[1].split("occurrences")[0].strip()
                                        crash_details[-1]["count"] = count_part
                                    except (IndexError, ValueError):
                                        pass
                                elif "Type:" in output and crash_details:
                                    # Type: SIGABRT - Program abort
                                    try:
                                        type_part = output.split("Type:")[1].strip()
                                        crash_details[-1]["type"] = type_part
                                    except (IndexError, ValueError):
                                        pass
                                elif "Severity:" in output and crash_details:
                                    # Severity: MEDIUM - Program termination
                                    try:
                                        severity_part = output.split("Severity:")[1].strip()
                                        crash_details[-1]["severity"] = severity_part
                                    except (IndexError, ValueError):
                                        pass
                                # Parse from live crash table format
                                elif "│" in output and "0x" in output and crash_details:
                                    # Format: │  1 │ 0x100000a70  │   6    │   1   │ SIGABRT  │ HIGH     │ 16:17:32          │
                                    try:
                                        parts = output.split("│")
                                        if len(parts) >= 6:
                                            # Extract signal number
                                            signal_str = parts[3].strip()
                                            if signal_str.isdigit():
                                                signal_num = int(signal_str)
                                                # Map signal number to name
                                                if signal_num == 5:
                                                    signal_name = "SIGTRAP"
                                                elif signal_num == 6:
                                                    signal_name = "SIGABRT"
                                                elif signal_num == 11:
                                                    signal_name = "SIGSEGV"
                                                else:
                                                    signal_name = f"Signal {signal_num}"
                                                
                                                # Extract severity
                                                severity_str = parts[5].strip()
                                                if severity_str == "HIGH":
                                                    severity = "HIGH"
                                                elif severity_str == "MEDIUM":
                                                    severity = "MEDIUM"
                                                elif severity_str == "LOW":
                                                    severity = "LOW"
                                                else:
                                                    severity = "UNKNOWN"
                                                
                                                # Update the last crash info
                                                if crash_details:
                                                    crash_details[-1]["signal"] = signal_name
                                                    crash_details[-1]["severity"] = severity
                                    except (IndexError, ValueError):
                                        pass
                                elif crash_details and output.strip().startswith("0x") and "\t" in output:
                                    # Assembly context line: 0000000100000484	bl	0x1000004d0
                                    if "assembly" not in crash_details[-1]:
                                        crash_details[-1]["assembly"] = []
                                    crash_details[-1]["assembly"].append(output.strip())
            
            # Final progress update to ensure 100%
            self.progress_updated.emit(self.iterations, self.iterations, total_crashes)
            
            # Parse final results
            results = {
                'total_executions': self.iterations,
                'total_crashes': total_crashes,
                'crash_rate': (total_crashes / self.iterations) * 100 if self.iterations > 0 else 0,
                'crash_details': crash_details,
                'output': '\n'.join(output_lines)
            }
            
            self.finished.emit(results)
            
        except Exception as e:
            self.output_updated.emit(f"Error: {str(e)}")

class CrashAnalysisTab(QWidget):
    """Tab for crash analysis and results"""
    
    def __init__(self):
        super().__init__()
        self.init_ui()
        
    def init_ui(self):
        layout = QVBoxLayout()
        
        # Results summary
        summary_group = QGroupBox("Fuzzing Results Summary")
        summary_layout = QGridLayout()
        
        self.total_exec_label = QLabel("Total Executions: -")
        self.total_crashes_label = QLabel("Total Crashes: -")
        self.crash_rate_label = QLabel("Crash Rate: -%")
        self.exec_speed_label = QLabel("Exec/sec: -")
        
        summary_layout.addWidget(self.total_exec_label, 0, 0)
        summary_layout.addWidget(self.total_crashes_label, 0, 1)
        summary_layout.addWidget(self.crash_rate_label, 1, 0)
        summary_layout.addWidget(self.exec_speed_label, 1, 1)
        
        summary_group.setLayout(summary_layout)
        layout.addWidget(summary_group)
        
        # Crash details table
        crash_group = QGroupBox("Crash Analysis Details")
        crash_layout = QVBoxLayout()
        
        self.crash_table = QTableWidget()
        self.crash_table.setColumnCount(5)
        self.crash_table.setHorizontalHeaderLabels([
            "Address", "Signal", "Count", "Type", "Severity"
        ])
        
        crash_layout.addWidget(self.crash_table)
        crash_group.setLayout(crash_layout)
        layout.addWidget(crash_group)
        
        # Assembly code viewer
        asm_group = QGroupBox("Assembly Code Context")
        asm_layout = QVBoxLayout()
        
        self.assembly_text = QTextEdit()
        self.assembly_text.setFont(QFont("Courier", 10))
        self.assembly_text.setReadOnly(True)
        
        asm_layout.addWidget(self.assembly_text)
        asm_group.setLayout(asm_layout)
        layout.addWidget(asm_group)
        
        self.setLayout(layout)
    
    def update_results(self, results):
        """Update UI with fuzzing results"""
        self.total_exec_label.setText(f"Total Executions: {results.get('total_executions', 0)}")
        self.total_crashes_label.setText(f"Total Crashes: {results.get('total_crashes', 0)}")
        self.crash_rate_label.setText(f"Crash Rate: {results.get('crash_rate', 0):.2f}%")
        
        # Update crash table with detailed information
        crash_details = results.get('crash_details', [])
        self.crash_table.setRowCount(len(crash_details))
        
        for i, crash in enumerate(crash_details):
            # Address
            address = crash.get('address', 'Unknown')
            self.crash_table.setItem(i, 0, QTableWidgetItem(address))
            
            # Signal
            signal = crash.get('signal', 'Unknown')
            self.crash_table.setItem(i, 1, QTableWidgetItem(signal))
            
            # Count
            count = crash.get('count', '1')
            self.crash_table.setItem(i, 2, QTableWidgetItem(count))
            
            # Type
            crash_type = crash.get('type', 'Unknown')
            self.crash_table.setItem(i, 3, QTableWidgetItem(crash_type))
            
            # Severity
            severity = crash.get('severity', 'Unknown')
            self.crash_table.setItem(i, 4, QTableWidgetItem(severity))
        
        # Update assembly viewer with first crash assembly if available
        if crash_details and crash_details[0].get('assembly'):
            assembly_lines = crash_details[0]['assembly']
            assembly_text = '\n'.join(assembly_lines)
            self.assembly_text.setText(f"Assembly context for first crash:\n\n{assembly_text}")
        else:
            # Fallback to full output
            output = results.get('output', '')
            self.assembly_text.setText(output)
            
    def add_crash_entry(self, crash_info):
        """Add a single crash entry to the table in real-time"""
        row = self.crash_table.rowCount()
        self.crash_table.insertRow(row)
        
        # Address
        address = crash_info.get('address', 'Unknown')
        self.crash_table.setItem(row, 0, QTableWidgetItem(address))
        
        # Signal
        signal = crash_info.get('signal', 'Unknown')
        self.crash_table.setItem(row, 1, QTableWidgetItem(signal))
        
        # Count
        count = crash_info.get('count', '1')
        self.crash_table.setItem(row, 2, QTableWidgetItem(count))
        
        # Type
        crash_type = crash_info.get('type', 'Unknown')
        self.crash_table.setItem(row, 3, QTableWidgetItem(crash_type))
        
        # Severity
        severity = crash_info.get('severity', 'Unknown')
        self.crash_table.setItem(row, 4, QTableWidgetItem(severity))

class FuzzProGUI(QMainWindow):
    """Main GUI window for FuzzPro"""
    
    def __init__(self):
        super().__init__()
        self.fuzzing_worker = None
        self.init_ui()
        self.setup_style()
        
    def init_ui(self):
        self.setWindowTitle("FuzzPro - Professional Security Fuzzing Tool")
        self.setGeometry(100, 100, 1200, 800)
        
        # Central widget
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        # Main layout
        main_layout = QHBoxLayout()
        
        # Left panel - Controls
        left_panel = self.create_control_panel()
        
        # Right panel - Results
        right_panel = self.create_results_panel()
        
        # Splitter
        splitter = QSplitter(Qt.Orientation.Horizontal)
        splitter.addWidget(left_panel)
        splitter.addWidget(right_panel)
        splitter.setStretchFactor(0, 1)
        splitter.setStretchFactor(1, 2)
        
        main_layout.addWidget(splitter)
        central_widget.setLayout(main_layout)
        
    def create_control_panel(self):
        """Create the left control panel"""
        panel = QFrame()
        panel.setFrameStyle(QFrame.Shape.StyledPanel)
        panel.setMinimumWidth(350)
        
        layout = QVBoxLayout()
        
        # Header
        header_label = QLabel("FuzzPro Control Panel")
        header_label.setFont(QFont("Arial", 16, QFont.Weight.Bold))
        header_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(header_label)
        
        # Target selection
        target_group = QGroupBox("Target Configuration")
        target_layout = QVBoxLayout()
        
        target_row = QHBoxLayout()
        self.target_path = QLineEdit("./vulnerable_test")
        self.target_path.setPlaceholderText("Path to target binary...")
        target_browse = QPushButton("Browse")
        target_browse.clicked.connect(self.browse_target)
        target_row.addWidget(QLabel("Target:"))
        target_row.addWidget(self.target_path)
        target_row.addWidget(target_browse)
        target_layout.addLayout(target_row)
        
        target_group.setLayout(target_layout)
        layout.addWidget(target_group)
        
        # Fuzzing parameters
        params_group = QGroupBox("Fuzzing Parameters")
        params_layout = QGridLayout()
        
        params_layout.addWidget(QLabel("Iterations:"), 0, 0)
        self.iterations_spin = QSpinBox()
        self.iterations_spin.setRange(1, 100000)
        self.iterations_spin.setValue(50)
        params_layout.addWidget(self.iterations_spin, 0, 1)
        
        # Add timeout setting
        params_layout.addWidget(QLabel("Timeout (sec):"), 1, 0)
        self.timeout_spin = QSpinBox()
        self.timeout_spin.setRange(1, 3600)
        self.timeout_spin.setValue(30)
        params_layout.addWidget(self.timeout_spin, 1, 1)
        
        # Add mutation intensity
        params_layout.addWidget(QLabel("Mutation Intensity:"), 2, 0)
        self.intensity_combo = QComboBox()
        self.intensity_combo.addItems(["Low", "Medium", "High", "Aggressive"])
        self.intensity_combo.setCurrentText("High")
        params_layout.addWidget(self.intensity_combo, 2, 1)
        
        params_group.setLayout(params_layout)
        layout.addWidget(params_group)
        
        # Progress section
        progress_group = QGroupBox("Fuzzing Progress")
        progress_layout = QVBoxLayout()
        
        self.progress_bar = QProgressBar()
        self.progress_label = QLabel("Ready to start fuzzing...")
        self.crash_count_label = QLabel("Crashes Found: 0")
        
        progress_layout.addWidget(self.progress_label)
        progress_layout.addWidget(self.progress_bar)
        progress_layout.addWidget(self.crash_count_label)
        
        progress_group.setLayout(progress_layout)
        layout.addWidget(progress_group)
        
        # Control buttons
        button_layout = QHBoxLayout()
        
        self.start_button = QPushButton("Start Fuzzing")
        self.start_button.clicked.connect(self.start_fuzzing)
        
        self.stop_button = QPushButton("Stop")
        self.stop_button.setEnabled(False)
        self.stop_button.clicked.connect(self.stop_fuzzing)
        
        button_layout.addWidget(self.start_button)
        button_layout.addWidget(self.stop_button)
        layout.addLayout(button_layout)
        
        layout.addStretch()
        panel.setLayout(layout)
        return panel
        
    def create_results_panel(self):
        """Create the right results panel"""
        panel = QFrame()
        panel.setFrameStyle(QFrame.Shape.StyledPanel)
        
        layout = QVBoxLayout()
        
        # Header
        header_label = QLabel("Fuzzing Results & Analysis")
        header_label.setFont(QFont("Arial", 16, QFont.Weight.Bold))
        header_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        layout.addWidget(header_label)
        
        # Tab widget
        self.tabs = QTabWidget()
        
        # Console output tab
        console_tab = QWidget()
        console_layout = QVBoxLayout()
        
        self.console_output = QTextEdit()
        self.console_output.setFont(QFont("Courier", 10))
        self.console_output.setReadOnly(True)
        
        console_layout.addWidget(self.console_output)
        console_tab.setLayout(console_layout)
        self.tabs.addTab(console_tab, "Console Output")
        
        # Crash analysis tab
        self.crash_analysis_tab = CrashAnalysisTab()
        self.tabs.addTab(self.crash_analysis_tab, "Crash Analysis")
        
        layout.addWidget(self.tabs)
        panel.setLayout(layout)
        return panel
        
    def setup_style(self):
        """Setup Ghidra-like dark theme styling"""
        self.setStyleSheet("""
            /* Main window styling */
            QMainWindow {
                background-color: #2b2b2b;
                color: #ffffff;
            }
            
            /* Group box styling */
            QGroupBox {
                font-weight: bold;
                border: 2px solid #cc3333;
                border-radius: 5px;
                margin-top: 1ex;
                padding-top: 10px;
                background-color: #1e1e1e;
                color: #ffffff;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px 0 5px;
                color: #cc3333;
            }
            
            /* Tab widget styling */
            QTabWidget::pane {
                border: 2px solid #cc3333;
                background-color: #1e1e1e;
            }
            QTabBar::tab {
                background-color: #2b2b2b;
                color: #ffffff;
                padding: 8px 16px;
                margin-right: 2px;
                border: 1px solid #666666;
            }
            QTabBar::tab:selected {
                background-color: #cc3333;
                color: #ffffff;
                border-bottom: 2px solid #cc3333;
            }
            QTabBar::tab:hover {
                background-color: #aa2222;
            }
            
            /* Button styling */
            QPushButton {
                background-color: #cc3333;
                color: #ffffff;
                border: 1px solid #cc3333;
                padding: 8px 16px;
                font-weight: bold;
                border-radius: 3px;
            }
            QPushButton:hover {
                background-color: #aa2222;
            }
            QPushButton:pressed {
                background-color: #882222;
            }
            QPushButton:disabled {
                background-color: #555555;
                color: #888888;
                border: 1px solid #555555;
            }
            
            /* Input field styling */
            QLineEdit {
                background-color: #1e1e1e;
                color: #ffffff;
                border: 1px solid #666666;
                padding: 5px;
                border-radius: 3px;
            }
            QLineEdit:focus {
                border: 2px solid #cc3333;
            }
            
            /* Spin box styling */
            QSpinBox {
                background-color: #1e1e1e;
                color: #ffffff;
                border: 1px solid #666666;
                padding: 5px;
                border-radius: 3px;
            }
            QSpinBox:focus {
                border: 2px solid #cc3333;
            }
            
            /* Progress bar styling */
            QProgressBar {
                border: 1px solid #666666;
                border-radius: 3px;
                text-align: center;
                background-color: #1e1e1e;
                color: #ffffff;
            }
            QProgressBar::chunk {
                background-color: #cc3333;
                border-radius: 3px;
            }
            
            /* Text edit styling */
            QTextEdit {
                background-color: #1e1e1e;
                color: #ffffff;
                border: 1px solid #666666;
                selection-background-color: #cc3333;
            }
            
            /* Table styling */
            QTableWidget {
                background-color: #1e1e1e;
                color: #ffffff;
                border: 1px solid #666666;
                gridline-color: #666666;
                selection-background-color: #cc3333;
            }
            QHeaderView::section {
                background-color: #2b2b2b;
                color: #ffffff;
                border: 1px solid #666666;
                padding: 5px;
                font-weight: bold;
            }
            
            /* Label styling */
            QLabel {
                color: #ffffff;
            }
            
            /* Frame styling */
            QFrame {
                background-color: #2b2b2b;
                border: 1px solid #666666;
            }
        """)
        
    def browse_target(self):
        """Browse for target binary"""
        file_path, _ = QFileDialog.getOpenFileName(
            self, "Select Target Binary", "", "Executable Files (*)")
        if file_path:
            self.target_path.setText(file_path)
            
    def start_fuzzing(self):
        """Start fuzzing campaign"""
        target = self.target_path.text().strip()
        iterations = self.iterations_spin.value()
        timeout = self.timeout_spin.value()
        intensity = self.intensity_combo.currentText()
        
        if not target:
            self.console_output.append("Error: Please specify target path")
            return
            
        if not os.path.exists(target):
            self.console_output.append(f"Error: Target binary not found: {target}")
            return
            
        # Update UI state
        self.start_button.setEnabled(False)
        self.stop_button.setEnabled(True)
        self.progress_bar.setRange(0, iterations)
        self.progress_bar.setValue(0)
        self.progress_label.setText(f"Starting fuzzing campaign with {iterations} iterations...")
        self.console_output.clear()
        
        # Start fuzzing worker with new parameters
        self.fuzzing_worker = FuzzingWorker(target, iterations, timeout, intensity)
        self.fuzzing_worker.progress_updated.connect(self.update_progress)
        self.fuzzing_worker.output_updated.connect(self.update_console)
        self.fuzzing_worker.crash_updated.connect(self.update_crash_table)
        self.fuzzing_worker.finished.connect(self.fuzzing_completed)
        self.fuzzing_worker.start()
        
    def stop_fuzzing(self):
        """Stop fuzzing campaign"""
        if self.fuzzing_worker and self.fuzzing_worker.isRunning():
            self.fuzzing_worker.terminate()
            self.fuzzing_worker.wait()
            
        self.start_button.setEnabled(True)
        self.stop_button.setEnabled(False)
        self.progress_label.setText("Fuzzing stopped by user")
        self.console_output.append("Fuzzing campaign stopped by user")
        
    def update_progress(self, current, total, crashes):
        """Update progress bar and labels"""
        self.progress_bar.setValue(current)
        self.progress_label.setText(f"Progress: {current}/{total} iterations ({(current/total)*100:.1f}%)")
        self.crash_count_label.setText(f"Crashes Found: {crashes}")
        
    def update_console(self, line):
        """Update console output"""
        self.console_output.append(line)
        # Auto-scroll to bottom
        scrollbar = self.console_output.verticalScrollBar()
        scrollbar.setValue(scrollbar.maximum())
        
    def update_crash_table(self, crash_info):
        """Update crash table in real-time"""
        self.crash_analysis_tab.add_crash_entry(crash_info)
        
    def fuzzing_completed(self, results):
        """Handle fuzzing completion"""
        self.start_button.setEnabled(True)
        self.stop_button.setEnabled(False)
        
        # Update final progress
        total_exec = results.get('total_executions', 0)
        total_crashes = results.get('total_crashes', 0)
        crash_rate = results.get('crash_rate', 0)
        
        self.progress_label.setText(f"Fuzzing Complete! {total_crashes} crashes found ({crash_rate:.2f}% rate)")
        self.crash_count_label.setText(f"Final Crashes: {total_crashes}")
        
        # Update crash analysis tab
        self.crash_analysis_tab.update_results(results)
        
        # Switch to crash analysis tab if crashes were found
        if total_crashes > 0:
            self.tabs.setCurrentIndex(1)
            self.console_output.append(f"\nFound {total_crashes} crashes! Check the Crash Analysis tab for details.")

def main():
    app = QApplication(sys.argv)
    app.setApplicationName("FuzzPro GUI")
    app.setApplicationVersion("1.0")
    
    # Set application icon if available
    try:
        app.setWindowIcon(QIcon("fuzzpro_icon.png"))
    except:
        pass
    
    window = FuzzProGUI()
    window.show()
    
    sys.exit(app.exec())

if __name__ == "__main__":
    main()
